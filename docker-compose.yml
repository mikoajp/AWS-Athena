version: '3.8'

services:
    mysql:
        image: mysql:8.0
        container_name: mysql-container
        restart: always
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: awsAthena
            MYSQL_USER: admin
            MYSQL_PASSWORD: admin
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app-network

    minio:
        image: minio/minio
        container_name: minio
        restart: always
        ports:
            - "9000:9000"
            - "9001:9001"
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        command: server /data --console-address ":9001"
        volumes:
            - minio_data:/data
        networks:
            - app-network

    laravel-app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel-app
        restart: always
        ports:
            - "8000:8000"
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
            - minio
        environment:
            APP_KEY: base64:K2gI2V3CcVfnXglsrcyzfMnmdSaAf8BKniQ7KOfs3Yo=
            APP_ENV: local
            APP_DEBUG: "true"
            DB_CONNECTION: mysql
            DB_HOST: mysql
            DB_PORT: 3306
            DB_DATABASE: awsAthena
            DB_USERNAME: admin
            DB_PASSWORD: admin
            FILESYSTEM_DRIVER: s3
            AWS_ACCESS_KEY_ID: minioadmin
            AWS_SECRET_ACCESS_KEY: minioadmin
            AWS_BUCKET: your-bucket-name
            AWS_URL: http://minio:9000
        networks:
            - app-network

volumes:
    mysql_data:
    minio_data:

networks:
    app-network:
        driver: bridge
